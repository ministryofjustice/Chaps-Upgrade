name: YARP build and deploy pipeline
on:
  workflow_dispatch:
  push:
    branches:
      - main
    tags:
      - v*

concurrency:
  group: deploy-${{ github.ref }}
  cancel-in-progress: true

jobs:
  # build:
  #   runs-on: windows-2019

  #   permissions:
  #     id-token: write
  #     contents: read

  #   steps:
  #     - name: Checkout with submodules
  #       uses: actions/checkout@v4
  #       with:
  #         submodules: recursive
  #         token: ${{ secrets.CHAPS_TOKEN }}
  #         fetch-depth: 0

  #     - name: Modify .gitmodules to Use GITHUB_TOKEN
  #       run: |
  #         git config --global url."https://x-access-token:${{ secrets.CHAPS_TOKEN }}@github.com/".insteadOf "https://github.com/"

  #     - name: Print .gitmodules File
  #       run: cat .gitmodules
      
  #     - name: Verify submodule checkout
  #       run: |
  #         dir Chaps-Upgrade\ChapsDotNet\ChapsDotNET\

  #     - name: Configure AWS credentials
  #       uses: aws-actions/configure-aws-credentials@v4
  #       with:
  #           audience: sts.amazonaws.com
  #           aws-region: eu-west-2
  #           role-to-assume: arn:aws:iam::631213771998:role/modernisation-platform-oidc-cicd

  #     - name: Build, tag, and push ChapsDotNet image to Amazon ECR
  #       env:
  #         ECR_REGISTRY: 374269020027.dkr.ecr.eu-west-2.amazonaws.com
  #         ECR_REPOSITORY: "chapsdotnet-ecr-repo"
  #       run: |
  #         aws ecr get-login-password --region eu-west-2 | docker login --username AWS --password-stdin ${env:ECR_REGISTRY}
  #         docker build -t ${{ vars.ECR_URL }}:chapsdotnet-${{ github.sha }} -f ./Chaps-Upgrade/ChapsDotNet.Dockerfile ./Chaps-Upgrade
  #         docker tag ${{ vars.ECR_URL }}:chapsdotnet-${{ github.sha }} ${{ vars.ECR_URL }}:chapsdotnet-development
  #         docker push ${{ vars.ECR_URL }}:chapsdotnet-${{ github.sha }}
  #         docker push ${{ vars.ECR_URL }}:chapsdotnet-development
      
  #     - name: Build and tag and push CHAPS image to Amazon ECR
  #      env:
  #        ECR_REGISTRY: 374269020027.dkr.ecr.eu-west-2.amazonaws.com
  #        ECR_REPOSITORY: "chaps-ecr-repo"
  #      run: |
          # aws ecr get-login-password --region eu-west-2 | docker login --username AWS --password-stdin ${env:ECR_REGISTRY}
          # docker build -t ${{ vars.ECR_URL }}:chaps-${{ github.sha }} -f ./Chaps-Upgrade/CHAPS.Dockerfile ./Chaps-Upgrade
          # docker tag ${{ vars.ECR_URL }}:chaps-${{ github.sha }} ${{ vars.ECR_URL }}:chaps-development
          # docker push ${{ vars.ECR_URL }}:chaps-${{ github.sha }}
          # docker push ${{ vars.ECR_URL }}:chaps-development 
          
  deploy-dev:
#      needs: [build]
      runs-on: ubuntu-latest

      permissions:
        id-token: write
        contents: read

      steps:
        - name: Configure AWS credentials
          uses: aws-actions/configure-aws-credentials@v4
          with:
            audience: sts.amazonaws.com
            aws-region: eu-west-2
            role-to-assume: arn:aws:iam::631213771998:role/modernisation-platform-oidc-cicd
        
        # - name: Get Terraform Output
        #   id: tf-output
        #   run: echo "chapsdotnet_task_definition=$(terraform output -raw chapsdotnet_task_definition)" >> $GITHUB_ENV
      
        # - name: Debug ECR URL, SHA and Task definition
        #   run: |
        #     echo "ECR URL: ${{ vars.ECR_URL }}"
        #     echo "SHA: ${{ github.sha }}"
        #     aws ecs describe-task-definition --task-definition "${{ env.chapsdotnet_task_definition }}"
          
        - name: Update ECS Task Definition for ChapsDotNet
          id: update-chapsdotnet-task-def
          env:
            AWS_REGION: eu-west-2
            ECR_REPOSITORY: "chapsdotnet-ecr-repo"
          run: |
            aws ecs describe-task-definition --task-definition chapsdotnet-family --query taskDefinition > chapsdotnet-task-definition.json
            jq '.containerDefinitions[0].image = "${{ vars.ECR_URL }}:chapsdotnet-development${{ github.sha }}"' chapsdotnet-task-definition.json > updated-chapsdotnet-task-definition.json

        - name: Deploy ChapsDotNet Amazon ECS task definition
          uses: aws-actions/amazon-ecs-deploy-task-definition@v1
          with:
            task-definition: updated-chapsdotnet-task-definition.json
            service: chapsdotnet-service
            cluster: chaps-upgrade-cluster
            wait-for-service-stability: true

        - name: Update ECS Task Definition for CHAPS
          id: update-chaps-task-def
          env:
            AWS_REGION: eu-west-2
            ECR_REPOSITORY: "chaps-ecr-repo"
          run: |
            aws ecs describe-task-definition --task-definition chaps-family --query taskDefinition > chaps-task-definition.json
            jq '.containerDefinitions[0].image = "${{ vars.ECR_URL }}:chaps-development${{ github.sha }}"' chaps-task-definition.json > updated-chaps-task-definition.json

        - name: Deploy CHAPS Amazon ECS task definition
          uses: aws-actions/amazon-ecs-deploy-task-definition@v1
          with:
            task-definition: updated-chaps-task-definition.json
            service: chaps-service
            cluster: chaps-upgrade-cluster
            wait-for-service-stability: true